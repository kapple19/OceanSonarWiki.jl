var documenterSearchIndex = {"docs":
[{"location":"01_oceanography/00_introduction/#Sonar-Oceanography","page":"Introduction","title":"Sonar Oceanography","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = OceanSonarWiki","category":"page"},{"location":"#OceanSonarWiki","page":"Home","title":"OceanSonarWiki","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for OceanSonarWiki.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [OceanSonarWiki]","category":"page"},{"location":"#OceanSonarWiki.KEEPTOKENS","page":"Home","title":"OceanSonarWiki.KEEPTOKENS","text":"OceanSonar.KEEPTOKENS\n\nUsed by styletext. Vector of Strings of english language words (tokens) to keep tokenised and keep their text styles (for certain text style conversions by styletext).\n\n\n\n\n\n","category":"constant"},{"location":"#OceanSonarWiki.styletextseps","page":"Home","title":"OceanSonarWiki.styletextseps","text":"OceanSonar.styletextseps\n\nUsed by styletext. NamedTuple of separators (delimiters) for different text style types.\n\n\n\n\n\n","category":"constant"},{"location":"#OceanSonarWiki._styletext_casify_token-Tuple{AbstractString, AbstractString}","page":"Home","title":"OceanSonarWiki._styletext_casify_token","text":"_styletext_casify_token(newstyle, token; keeptokens = OceanSonar.KEEPTOKENS)\n\nConverts a single token to its specified newstyle.\n\n\n\n\n\n","category":"method"},{"location":"#OceanSonarWiki._styletext_verify_style-Union{Tuple{Val{C}}, Tuple{C}} where C","page":"Home","title":"OceanSonarWiki._styletext_verify_style","text":"_styletext_verify_style\n\nUsed by styletext. Verifies the request text style type.\n\n\n\n\n\n","category":"method"},{"location":"#OceanSonarWiki.pascaltext-Tuple{Any}","page":"Home","title":"OceanSonarWiki.pascaltext","text":"titletext(text) -> ::AbstractString\npascaltext(text) -> ::AbstractString\nsnaketext(text) -> ::AbstractString\n\nConverts the inputted text to the named text case style.\n\nConvenience functions for styletext, internally calls e.g. styletext(:title, text).\n\n\n\n\n\n","category":"method"},{"location":"#OceanSonarWiki.snaketext-Tuple{Any}","page":"Home","title":"OceanSonarWiki.snaketext","text":"titletext(text) -> ::AbstractString\npascaltext(text) -> ::AbstractString\nsnaketext(text) -> ::AbstractString\n\nConverts the inputted text to the named text case style.\n\nConvenience functions for styletext, internally calls e.g. styletext(:title, text).\n\n\n\n\n\n","category":"method"},{"location":"#OceanSonarWiki.styletext-Union{Tuple{V}, Tuple{V, AbstractString}} where V<:Union{Val{:snake}, Val{:space}, Val{:kebab}, Val{:Snake}, Val{:Space}, Val{:Kebab}, Val{:Pascal}}","page":"Home","title":"OceanSonarWiki.styletext","text":"styletext(\n    newstyle :: Union{Symbol, <:AbstractString},\n    oldtext :: Union{Symbol, <:AbstractString, <:Model{M}} where {M}\n    ;\n    keeptokens :: AbstractVector{<:AbstractString} = OceanSonar.KEEPTOKENS\n)\n\nConverts oldtext into the requested newstyle text.\n\nImplemented text styles:\n\n:space: Space-delimited tokens; tokens lowercased except keeptokens preserved.\n:Title/:title/:Space: Space-delimited tokens; tokens' first character uppercased except keeptokens preserved.\n:Pascal/:pascal: No token delimiter; tokens' first character uppercased except keeptokens preserved.\n:camel: As :pascal but the very first character of text is lowercase.\n:Snake: Underscore-delimited tokens; tokens' first character uppercased except keeptokens preserved.\n:snake: Underscore-delimited tokens; tokens' first character lowercased except keeptokens preserved.\n:Kebab: Hyphen-delimited tokens; tokens' first character uppercased except keeptokens.\n:kebab: Hyphen-delimited tokens; tokens' first character lowercased except keeptokens.\n\nExamples of implemented text styles:\n\n:Space: \"Say 32 Big Goodbyes to 1 Cruel NSW 1st World\"\n:space: \"say 32 big goodbyes to 1 cruel NSW 1st world\"\n:pascal: \"Say32BigGoodbyesTo1CruelNSW1stWorld\"\n:camel: \"say32BigGoodbyesTo1CruelNSW1stWorld\"\n:Snake: \"Say_32_Big_Goodbyes_to_1_Cruel_NSW_1st_World\"\n:snake: \"say_32_big_goodbyes_to_1_cruel_NSW_1st_world\"\n:Kebab: \"Say-32-Big-Goodbyes-to-1-Cruel-NSW-1st-World\"\n:kebab: \"say-32-big-goodbyes-to-1-cruel-NSW-1st-world\"\n\nThe title case behaves differently from Base.Unicode.titlecase, e.g.\n\njulia> titlecase(\"say-32-big-goodbyes-to-1-cruel-NSW-1st-world\")\n\"Say-32-Big-Goodbyes-To-1-Cruel-Nsw-1St-World\"\n\njulia> styletext(:title, \"say-32-big-goodbyes-to-1-cruel-NSW-1st-world\")\n\"Say 32 Big Goodbyes to 1 Cruel NSW 1st World\"\n\nThe following convenience methods are also exported:\n\ntitletext\nsnaketext\npascaltext\n\n\n\n\n\n","category":"method"},{"location":"#OceanSonarWiki.titletext-Tuple{Any}","page":"Home","title":"OceanSonarWiki.titletext","text":"titletext(text) -> ::AbstractString\npascaltext(text) -> ::AbstractString\nsnaketext(text) -> ::AbstractString\n\nConverts the inputted text to the named text case style.\n\nConvenience functions for styletext, internally calls e.g. styletext(:title, text).\n\n\n\n\n\n","category":"method"}]
}
